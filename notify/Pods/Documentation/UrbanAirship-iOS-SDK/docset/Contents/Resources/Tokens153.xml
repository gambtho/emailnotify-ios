<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/UALocationProviderDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/UALocationProviderDelegate</TokenIdentifier>
			<Abstract type="html">Delegate methods for Location providers. All are required</Abstract>
			<DeclaredIn>UALocationProviderDelegate.h</DeclaredIn>
			
			<NodeRef refid="153"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UALocationProviderDelegate/locationProvider:withLocationManager:didChangeAuthorizationStatus:</TokenIdentifier>
			<Abstract type="html">Delegate call for authorization state changes iOS &gt; 4.2 only</Abstract>
			<DeclaredIn>UALocationProviderDelegate.h</DeclaredIn>			
			
			<Declaration>- (void)locationProvider:(id&lt;UALocationProviderProtocol&gt;)locationProvider withLocationManager:(CLLocationManager *)locationManager didChangeAuthorizationStatus:(CLAuthorizationStatus)status</Declaration>
			<Parameters>
				<Parameter>
					<Name>locationProvider</Name>
					<Abstract type="html">The location provider</Abstract>
				</Parameter><Parameter>
					<Name>locationManager</Name>
					<Abstract type="html">The CLLocationManager object</Abstract>
				</Parameter><Parameter>
					<Name>status</Name>
					<Abstract type="html">The new status</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/locationProvider:withLocationManager:didChangeAuthorizationStatus:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UALocationProviderDelegate/locationProvider:withLocationManager:didFailWithError:</TokenIdentifier>
			<Abstract type="html">Delegate is called when a UALocationServices object reports an error</Abstract>
			<DeclaredIn>UALocationProviderDelegate.h</DeclaredIn>			
			
			<Declaration>- (void)locationProvider:(id&lt;UALocationProviderProtocol&gt;)locationProvider withLocationManager:(CLLocationManager *)locationManager didFailWithError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>locationProvider</Name>
					<Abstract type="html">The location provider</Abstract>
				</Parameter><Parameter>
					<Name>locationManager</Name>
					<Abstract type="html">The CLLocationManager object</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The NSError thrown by the locationManager</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/locationProvider:withLocationManager:didFailWithError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UALocationProviderDelegate/locationProvider:withLocationManager:didUpdateLocation:fromLocation:</TokenIdentifier>
			<Abstract type="html">Delegate is called when a UALocationService gets a callback
from a CLLocationManager with a location that meets accuracy
requirements.</Abstract>
			<DeclaredIn>UALocationProviderDelegate.h</DeclaredIn>			
			
			<Declaration>- (void)locationProvider:(id&lt;UALocationProviderProtocol&gt;)locationProvider withLocationManager:(CLLocationManager *)locationManager didUpdateLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation</Declaration>
			<Parameters>
				<Parameter>
					<Name>locationProvider</Name>
					<Abstract type="html">The location provider</Abstract>
				</Parameter><Parameter>
					<Name>locationManager</Name>
					<Abstract type="html">The CLLocationManager object</Abstract>
				</Parameter><Parameter>
					<Name>newLocation</Name>
					<Abstract type="html">The new location reported by the provider</Abstract>
				</Parameter><Parameter>
					<Name>oldLocation</Name>
					<Abstract type="html">The previous location reported by the provider</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/locationProvider:withLocationManager:didUpdateLocation:fromLocation:</Anchor>
		</Token>
		
	</File>
</Tokens>