<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/UAInboxUI.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/UAInboxUI</TokenIdentifier>
			<Abstract type="html">This class is the default rich push UI impelementation.  When it is
designated as the [UAInbox uiClass], launching the inbox will cause it
to be displayed in a modal view controller.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>
			
			<NodeRef refid="54"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxUI/setUseOverlay:</TokenIdentifier>
			<Abstract type="html">Set this property to YES if the class should display in-app messages
using UAInboxOverlayController, and NO if it should navigate to the
inbox and display the message as though it had been selected.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL useOverlay</Declaration>
			
			
			<Anchor>//api/name/useOverlay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxUI/useOverlay</TokenIdentifier>
			<Abstract type="html">Set this property to YES if the class should display in-app messages
using UAInboxOverlayController, and NO if it should navigate to the
inbox and display the message as though it had been selected.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL useOverlay</Declaration>
			
			
			<Anchor>//api/name/useOverlay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxUI/setInboxParentController:</TokenIdentifier>
			<Abstract type="html">The parent view controller the inbox will be launched from.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIViewController *inboxParentController</Declaration>
			
			
			<Anchor>//api/name/inboxParentController</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxUI/inboxParentController</TokenIdentifier>
			<Abstract type="html">The parent view controller the inbox will be launched from.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIViewController *inboxParentController</Declaration>
			
			
			<Anchor>//api/name/inboxParentController</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxUI/setLocalizationBundle:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSBundle *localizationBundle</Declaration>
			
			
			<Anchor>//api/name/localizationBundle</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxUI/localizationBundle</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSBundle *localizationBundle</Declaration>
			
			
			<Anchor>//api/name/localizationBundle</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAInboxUI/quitInbox</TokenIdentifier>
			<Abstract type="html">Hide the inbox UI and perform any resource cleanup.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>+ (void)quitInbox</Declaration>
			
			
			<Anchor>//api/name/quitInbox</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAInboxUI/displayInbox:animated:</TokenIdentifier>
			<Abstract type="html">Display the inbox UI.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>+ (void)displayInbox:(UIViewController *)viewController animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>viewController</Name>
					<Abstract type="html">The parent view controller</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">YES to animate the transition</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/displayInbox:animated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAInboxUI/displayMessage:message:</TokenIdentifier>
			<Abstract type="html">Display the inbox UI and open a specific message.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>+ (void)displayMessage:(UIViewController *)viewController message:(NSString *)messageID</Declaration>
			<Parameters>
				<Parameter>
					<Name>viewController</Name>
					<Abstract type="html">The parent view controller</Abstract>
				</Parameter><Parameter>
					<Name>messageID</Name>
					<Abstract type="html">The ID for the message to display</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/displayMessage:message:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAInboxUI/loadLaunchMessage</TokenIdentifier>
			<Abstract type="html">Open the Rich Push Inbox directly to the message associated with
the push notification that launched or foregrounded the application.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>+ (void)loadLaunchMessage</Declaration>
			
			
			<Anchor>//api/name/loadLaunchMessage</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxUI/newMessageArrived:</TokenIdentifier>
			<Abstract type="html">Handle an incoming push message.</Abstract>
			<DeclaredIn>UAInboxUI.h</DeclaredIn>			
			
			<Declaration>- (void)newMessageArrived:(NSDictionary *)message</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">An NSDictionary with the push notification contents.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/newMessageArrived:</Anchor>
		</Token>
		
	</File>
</Tokens>