<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/UALocationService.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/UALocationService</TokenIdentifier>
			<Abstract type="html">The UALocationService class provides an interface to both the location services on
device and the Urban Airship API.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>
			
			<NodeRef refid="62"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/standardLocationDistanceFilter</TokenIdentifier>
			<Abstract type="html">The distance filter on the standard location provider</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (CLLocationDistance)standardLocationDistanceFilter</Declaration>
			
			<ReturnValue><Abstract type="html">CLLocationDistance The current distance filter on the standard location provider</Abstract></ReturnValue>
			<Anchor>//api/name/standardLocationDistanceFilter</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setStandardLocationDistanceFilter:</TokenIdentifier>
			<Abstract type="html">Sets the distance filter on the standard location provider.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)setStandardLocationDistanceFilter:(CLLocationDistance)distanceFilter</Declaration>
			<Parameters>
				<Parameter>
					<Name>distanceFilter</Name>
					<Abstract type="html">The new distance filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setStandardLocationDistanceFilter:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/standardLocationDesiredAccuracy</TokenIdentifier>
			<Abstract type="html">The desired accuracy on the standard location provider</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (CLLocationAccuracy)standardLocationDesiredAccuracy</Declaration>
			
			<ReturnValue><Abstract type="html">CLLocationAccuracy The current desired accuracy</Abstract></ReturnValue>
			<Anchor>//api/name/standardLocationDesiredAccuracy</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setStandardLocationDesiredAccuracy:</TokenIdentifier>
			<Abstract type="html">Sets the standard location desired accuracy</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)setStandardLocationDesiredAccuracy:(CLLocationAccuracy)desiredAccuracy</Declaration>
			<Parameters>
				<Parameter>
					<Name>desiredAccuracy</Name>
					<Abstract type="html">The new desired accuracy</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setStandardLocationDesiredAccuracy:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/airshipLocationServiceEnabled</TokenIdentifier>
			<Abstract type="html">Current setting allowing UA location services</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)airshipLocationServiceEnabled</Declaration>
			
			<ReturnValue><Abstract type="html">YES UA location services are allowed, and will start if authorized and enabledNO UA location services are not allowed, and will not start, even if authorized and enabled</Abstract></ReturnValue>
			<Anchor>//api/name/airshipLocationServiceEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/setAirshipLocationServiceEnabled:</TokenIdentifier>
			<Abstract type="html">The allows UA Location Services to report location</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>+ (void)setAirshipLocationServiceEnabled:(BOOL)airshipLocationServiceEnabled</Declaration>
			<Parameters>
				<Parameter>
					<Name>airshipLocationServiceEnabled</Name>
					<Abstract type="html">If set to YES, all UA location services will run
if the system reports that location services are available and authorized. This setting will not
override the users choice to disable location services and is safe to enable when user preferences
have not been established. If NO, UA Location Services are disabled. This setting is persisted in
NSUserDefaults</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setAirshipLocationServiceEnabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/locationServicesEnabled</TokenIdentifier>
			<Abstract type="html">Reports the current authorization status of location services as reported by the
system. This refers to the global location service setting switch.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)locationServicesEnabled</Declaration>
			
			<ReturnValue><Abstract type="html">YES if location services are reported as enabled by the system.NO if location services are reported as not enabled by the system.</Abstract></ReturnValue>
			<Anchor>//api/name/locationServicesEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/locationServiceAuthorized</TokenIdentifier>
			<Abstract type="html">Reports the current authorization status of location services as reported by the
system.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)locationServiceAuthorized</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the user has authorized location services, or has yet to be asked about location services.NO if the user has explicitly disabled location services</Abstract></ReturnValue>
			<Anchor>//api/name/locationServiceAuthorized</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/coreLocationWillPromptUserForPermissionToRun</TokenIdentifier>
			<Abstract type="html">This method checks the underlying Core Location service for to see if a user
will receive a prompt requesting permission for Core Location services to run.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)coreLocationWillPromptUserForPermissionToRun</Declaration>
			
			<ReturnValue><Abstract type="html">NO If Core Location services are enabled and the user has explicitly authorized location servicesYES If ANY of the following are true
    - Location services are not enabled (The global location service setting in Settings is disabled)
    - Location services are explicitly not authorized (The per app location service setting in Settings is disabled)
    - The user has not been asked yet to allow location services. (Location services are enabled, and CLLocationManager reports kCLAuthorizationStatusNotDetermined)</Abstract></ReturnValue>
			<Anchor>//api/name/coreLocationWillPromptUserForPermissionToRun</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setPromptUserForLocationServices:</TokenIdentifier>
			<Abstract type="html">This flag will allows UA Location Services to re prompt the user to allow services
The user may have explicitly disallowed location services, so reprompting them may not
be welcome. A value of NO (default value) will ensure that the user is only prompted in the
case where system location services have indicated that the user has not disabled location
services and has not been previously prompted for location services.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL promptUserForLocationServices</Declaration>
			
			<ReturnValue><Abstract type="html">YES An attempt to start location services will be made even if this results in prompting
the user to allow location services.NO Location services will not start if the user has previously disabled location services.</Abstract></ReturnValue>
			<Anchor>//api/name/promptUserForLocationServices</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/promptUserForLocationServices</TokenIdentifier>
			<Abstract type="html">This flag will allows UA Location Services to re prompt the user to allow services
The user may have explicitly disallowed location services, so reprompting them may not
be welcome. A value of NO (default value) will ensure that the user is only prompted in the
case where system location services have indicated that the user has not disabled location
services and has not been previously prompted for location services.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL promptUserForLocationServices</Declaration>
			
			<ReturnValue><Abstract type="html">YES An attempt to start location services will be made even if this results in prompting
the user to allow location services.NO Location services will not start if the user has previously disabled location services.</Abstract></ReturnValue>
			<Anchor>//api/name/promptUserForLocationServices</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/location</TokenIdentifier>
			<Abstract type="html">The most recently received location available from the CLLocationManager objec. This may be more accurate than
the last reported location, and it may also be nil. See CLLocationManager documentation for more details.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (CLLocation *)location</Declaration>
			
			<ReturnValue><Abstract type="html">The most recent location, if one is availablenil if no recent location is available</Abstract></ReturnValue>
			<Anchor>//api/name/location</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setLastReportedLocation:</TokenIdentifier>
			<Abstract type="html">Last location reported to Urban Airship</Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) CLLocation *lastReportedLocation</Declaration>
			
			
			<Anchor>//api/name/lastReportedLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/lastReportedLocation</TokenIdentifier>
			<Abstract type="html">Last location reported to Urban Airship</Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) CLLocation *lastReportedLocation</Declaration>
			
			
			<Anchor>//api/name/lastReportedLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setDateOfLastLocation:</TokenIdentifier>
			<Abstract type="html">Date of last location event reported</Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSDate *dateOfLastLocation</Declaration>
			
			
			<Anchor>//api/name/dateOfLastLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/dateOfLastLocation</TokenIdentifier>
			<Abstract type="html">Date of last location event reported</Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSDate *dateOfLastLocation</Declaration>
			
			
			<Anchor>//api/name/dateOfLastLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setDelegate:</TokenIdentifier>
			<Abstract type="html">UALocationServiceDelegate for location service callbacks</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;UALocationServiceDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/delegate</TokenIdentifier>
			<Abstract type="html">UALocationServiceDelegate for location service callbacks</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;UALocationServiceDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setAutomaticLocationOnForegroundEnabled:</TokenIdentifier>
			<Abstract type="html">Starts the GPS (Standard Location) and acquires a single location on every launch.
Setting this property to YES has the side effect of calling reportCurrentLocation.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, setter=setAutomaticLocationOnForegroundEnabled, :) BOOL automaticLocationOnForegroundEnabled</Declaration>
			
			
			<Anchor>//api/name/automaticLocationOnForegroundEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/automaticLocationOnForegroundEnabled</TokenIdentifier>
			<Abstract type="html">Starts the GPS (Standard Location) and acquires a single location on every launch.
Setting this property to YES has the side effect of calling reportCurrentLocation.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, setter=setAutomaticLocationOnForegroundEnabled, :) BOOL automaticLocationOnForegroundEnabled</Declaration>
			
			
			<Anchor>//api/name/automaticLocationOnForegroundEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setBackgroundLocationServiceEnabled:</TokenIdentifier>
			<Abstract type="html">Allows location services to continue in the background</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL backgroundLocationServiceEnabled</Declaration>
			
			
			<Anchor>//api/name/backgroundLocationServiceEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/backgroundLocationServiceEnabled</TokenIdentifier>
			<Abstract type="html">Allows location services to continue in the background</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL backgroundLocationServiceEnabled</Declaration>
			
			
			<Anchor>//api/name/backgroundLocationServiceEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setMinimumTimeBetweenForegroundUpdates:</TokenIdentifier>
			<Abstract type="html">Minimum time between automatic updates that are tied to app foreground events.
Default value is 120 seconds</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval minimumTimeBetweenForegroundUpdates</Declaration>
			
			
			<Anchor>//api/name/minimumTimeBetweenForegroundUpdates</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/minimumTimeBetweenForegroundUpdates</TokenIdentifier>
			<Abstract type="html">Minimum time between automatic updates that are tied to app foreground events.
Default value is 120 seconds</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval minimumTimeBetweenForegroundUpdates</Declaration>
			
			
			<Anchor>//api/name/minimumTimeBetweenForegroundUpdates</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setStandardLocationServiceStatus:</TokenIdentifier>
			<Abstract type="html">Status for GPS service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) UALocationProviderStatus standardLocationServiceStatus</Declaration>
			
			
			<Anchor>//api/name/standardLocationServiceStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/standardLocationServiceStatus</TokenIdentifier>
			<Abstract type="html">Status for GPS service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) UALocationProviderStatus standardLocationServiceStatus</Declaration>
			
			
			<Anchor>//api/name/standardLocationServiceStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSignificantChangeServiceStatus:</TokenIdentifier>
			<Abstract type="html">Status for NETWORK (cell tower) events</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) UALocationProviderStatus significantChangeServiceStatus</Declaration>
			
			
			<Anchor>//api/name/significantChangeServiceStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/significantChangeServiceStatus</TokenIdentifier>
			<Abstract type="html">Status for NETWORK (cell tower) events</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) UALocationProviderStatus significantChangeServiceStatus</Declaration>
			
			
			<Anchor>//api/name/significantChangeServiceStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSingleLocationServiceStatus:</TokenIdentifier>
			<Abstract type="html">Status for single location service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) UALocationProviderStatus singleLocationServiceStatus</Declaration>
			
			
			<Anchor>//api/name/singleLocationServiceStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/singleLocationServiceStatus</TokenIdentifier>
			<Abstract type="html">Status for single location service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) UALocationProviderStatus singleLocationServiceStatus</Declaration>
			
			
			<Anchor>//api/name/singleLocationServiceStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/purpose</TokenIdentifier>
			<Abstract type="html">Purpose for location services shown to user
when prompted to allow location services to begin. The default value
is kUALocationServiceDefaultPurpose listed in UAirship.m. This value is set on
all new location services.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (NSString *)purpose</Declaration>
			
			<ReturnValue><Abstract type="html">An NSString with the current purpose</Abstract></ReturnValue>
			<Anchor>//api/name/purpose</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setPurpose:</TokenIdentifier>
			<Abstract type="html">Purpose for location services shown to user
when prompted to allow location services to begin. The default value
is kUALocationServiceDefaultPurpose listed in UAirship.m. This value is set on
all new location services.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)setPurpose:(NSString *)purpose</Declaration>
			<Parameters>
				<Parameter>
					<Name>purpose</Name>
					<Abstract type="html">The new purpose of the service</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setPurpose:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/initWithPurpose:</TokenIdentifier>
			<Abstract type="html">Returns a UALocationService object with the given purpose. The purpose
string is passed to the UALocationProviders and set on the CLLocationManager.
This is displayed to the user when asking for location authorization.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (id)initWithPurpose:(NSString *)purpose</Declaration>
			<Parameters>
				<Parameter>
					<Name>purpose</Name>
					<Abstract type="html">The description that is displayed to the user when prompted for authorization.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithPurpose:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/startReportingStandardLocation</TokenIdentifier>
			<Abstract type="html">Start the standard location service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)startReportingStandardLocation</Declaration>
			
			
			<Anchor>//api/name/startReportingStandardLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/stopReportingStandardLocation</TokenIdentifier>
			<Abstract type="html">Stops the standard location service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)stopReportingStandardLocation</Declaration>
			
			
			<Anchor>//api/name/stopReportingStandardLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/startReportingSignificantLocationChanges</TokenIdentifier>
			<Abstract type="html">Starts the Significant Change location service
and sends location data to Urban Airship. This service
will continue in the background if stopMonitoringSignificantLocationChanges
is not called before the app enters the background.
This will not start the location service if the app is not enabled and authorized. To force
location services to start, set the UALocationServicesAllowed property to YES and call this method.
This will prompt the user for permission if location services have not been started previously,
or if the user has purposely disabled location services. Given that location services were probably
disabled for a reason, this prompt might not be welcomed.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)startReportingSignificantLocationChanges</Declaration>
			
			
			<Anchor>//api/name/startReportingSignificantLocationChanges</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/stopReportingSignificantLocationChanges</TokenIdentifier>
			<Abstract type="html">Stops the Significant Change location service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)stopReportingSignificantLocationChanges</Declaration>
			
			
			<Anchor>//api/name/stopReportingSignificantLocationChanges</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/reportLocationToAnalytics:fromProvider:</TokenIdentifier>
			<Abstract type="html">Creates a UALocationEvent and enqueues it with the Analytics service</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)reportLocationToAnalytics:(CLLocation *)location fromProvider:(id&lt;UALocationProviderProtocol&gt;)provider</Declaration>
			<Parameters>
				<Parameter>
					<Name>location</Name>
					<Abstract type="html">The location to be sent to the Urban Airship analytics service</Abstract>
				</Parameter><Parameter>
					<Name>provider</Name>
					<Abstract type="html">The provider that generated the location. Data is pulled from the provider for analytics</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reportLocationToAnalytics:fromProvider:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/timeoutForSingleLocationService</TokenIdentifier>
			<Abstract type="html">Time interval representing the amount of time that the single location service will
run while waiting for a location value that meets the desired accuracy</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (NSTimeInterval)timeoutForSingleLocationService</Declaration>
			
			<ReturnValue><Abstract type="html">NSTimeInterval representing the current timeout value</Abstract></ReturnValue>
			<Anchor>//api/name/timeoutForSingleLocationService</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setTimeoutForSingleLocationService:</TokenIdentifier>
			<Abstract type="html">Time interval representing the length of time the single location service will
attempt to acquire a location that meets accuracy requirements. At the end of the time
interval, the most accurate location received will be sent. If no location has
been received, the service is shut down.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)setTimeoutForSingleLocationService:(NSTimeInterval)timeoutForSingleLocationService</Declaration>
			<Parameters>
				<Parameter>
					<Name>timeoutForSingleLocationService</Name>
					<Abstract type="html">NSTimeInterval for the new timeout value</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setTimeoutForSingleLocationService:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/singleLocationDesiredAccuracy</TokenIdentifier>
			<Abstract type="html">Desired accuracy for single location service. Used by the reportCurrentLocation: method
and the automatic foreground location</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (CLLocationAccuracy)singleLocationDesiredAccuracy</Declaration>
			
			
			<Anchor>//api/name/singleLocationDesiredAccuracy</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSingleLocationDesiredAccuracy:</TokenIdentifier>
			<Abstract type="html">Sets the desiredAccuracy for the single location service. Used by the reportCurrentLocation: method
and the automatic foreground location</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)setSingleLocationDesiredAccuracy:(CLLocationAccuracy)desiredAccuracy</Declaration>
			<Parameters>
				<Parameter>
					<Name>desiredAccuracy</Name>
					<Abstract type="html">CLLocationAccuracy The new desiredAccuracy</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setSingleLocationDesiredAccuracy:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/reportCurrentLocation</TokenIdentifier>
			<Abstract type="html">Starts the single location service (standard location long enough to obtain a location an then uploads
it to Urban Airship. This method will send the first location that meets the accuracy set in
the singleLocationDesiredAccuracy property. If a location is not found before the timeout, the most
accurate location returned by CoreLocation is returned. If no location is found, the service is
simply terminated.</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)reportCurrentLocation</Declaration>
			
			
			<Anchor>//api/name/reportCurrentLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/reportLocation:fromLocationManager:withUpdateType:</TokenIdentifier>
			<Abstract type="html">Sends a location directly to Urban Airship. The required parameters are taken from the CLLocation and
the CLLocationManager. The UALocationEventUpdateType is helpful in providing the end developer with information
regarding the use of location in app. The possible values are:</Abstract>
			<DeclaredIn>UALocationService.h</DeclaredIn>			
			
			<Declaration>- (void)reportLocation:(CLLocation *)location fromLocationManager:(CLLocationManager *)locationManager withUpdateType:(UALocationEventUpdateType *)updateTypeOrNil</Declaration>
			<Parameters>
				<Parameter>
					<Name>location</Name>
					<Abstract type="html">A CLLocation</Abstract>
				</Parameter><Parameter>
					<Name>locationManager</Name>
					<Abstract type="html">The location manager that provided the location</Abstract>
				</Parameter><Parameter>
					<Name>updateTypeOrNil</Name>
					<Abstract type="html">The update type as described above or nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reportLocation:fromLocationManager:withUpdateType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setShouldStartReportingStandardLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldStartReportingStandardLocation</Declaration>
			
			
			<Anchor>//api/name/shouldStartReportingStandardLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/shouldStartReportingStandardLocation</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldStartReportingStandardLocation</Declaration>
			
			
			<Anchor>//api/name/shouldStartReportingStandardLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setShouldStartReportingSignificantChange:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldStartReportingSignificantChange</Declaration>
			
			
			<Anchor>//api/name/shouldStartReportingSignificantChange</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/shouldStartReportingSignificantChange</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldStartReportingSignificantChange</Declaration>
			
			
			<Anchor>//api/name/shouldStartReportingSignificantChange</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setBestAvailableSingleLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) CLLocation *bestAvailableSingleLocation</Declaration>
			
			
			<Anchor>//api/name/bestAvailableSingleLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/bestAvailableSingleLocation</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) CLLocation *bestAvailableSingleLocation</Declaration>
			
			
			<Anchor>//api/name/bestAvailableSingleLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSingleLocationBackgroundIdentifier:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) UIBackgroundTaskIdentifier singleLocationBackgroundIdentifier</Declaration>
			
			
			<Anchor>//api/name/singleLocationBackgroundIdentifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/singleLocationBackgroundIdentifier</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) UIBackgroundTaskIdentifier singleLocationBackgroundIdentifier</Declaration>
			
			
			<Anchor>//api/name/singleLocationBackgroundIdentifier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSingleLocationShutdownScheduled:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL singleLocationShutdownScheduled</Declaration>
			
			
			<Anchor>//api/name/singleLocationShutdownScheduled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UALocationService/singleLocationShutdownScheduled</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL singleLocationShutdownScheduled</Declaration>
			
			
			<Anchor>//api/name/singleLocationShutdownScheduled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/setObject:forLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (void)setObject:(id)value forLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/setObject:forLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/objectForLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (id)objectForLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/objectForLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/setBool:forLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (void)setBool:(BOOL)boolValue forLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/setBool:forLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/boolForLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)boolForLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/boolForLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/setDouble:forLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (void)setDouble:(double)value forLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/setDouble:forLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/doubleForLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (double)doubleForLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/doubleForLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/restartPreviousLocationServices</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)restartPreviousLocationServices</Declaration>
			
			
			<Anchor>//api/name/restartPreviousLocationServices</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/desiredAccuracyForLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (CLLocationAccuracy)desiredAccuracyForLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/desiredAccuracyForLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/distanceFilterForLocationServiceKey:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (CLLocationDistance)distanceFilterForLocationServiceKey:(UALocationServiceNSDefaultsKey *)key</Declaration>
			
			
			<Anchor>//api/name/distanceFilterForLocationServiceKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/standardLocationProvider</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (UAStandardLocationProvider *)standardLocationProvider</Declaration>
			
			
			<Anchor>//api/name/standardLocationProvider</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setStandardLocationProvider:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)setStandardLocationProvider:(UAStandardLocationProvider *)standardLocationProvider</Declaration>
			
			
			<Anchor>//api/name/setStandardLocationProvider:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/significantChangeProvider</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (UASignificantChangeProvider *)significantChangeProvider</Declaration>
			
			
			<Anchor>//api/name/significantChangeProvider</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSignificantChangeProvider:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)setSignificantChangeProvider:(UASignificantChangeProvider *)significantChangeProvider</Declaration>
			
			
			<Anchor>//api/name/setSignificantChangeProvider:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/singleLocationProvider</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (UAStandardLocationProvider *)singleLocationProvider</Declaration>
			
			
			<Anchor>//api/name/singleLocationProvider</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setSingleLocationProvider:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)setSingleLocationProvider:(UAStandardLocationProvider *)singleLocationProvider</Declaration>
			
			
			<Anchor>//api/name/setSingleLocationProvider:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/setCommonPropertiesOnProvider:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)setCommonPropertiesOnProvider:(id&lt;UALocationProviderProtocol&gt;)locationProvider</Declaration>
			
			
			<Anchor>//api/name/setCommonPropertiesOnProvider:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/isLocationServiceEnabledAndAuthorized</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isLocationServiceEnabledAndAuthorized</Declaration>
			
			
			<Anchor>//api/name/isLocationServiceEnabledAndAuthorized</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/beginObservingUIApplicationState</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)beginObservingUIApplicationState</Declaration>
			
			
			<Anchor>//api/name/beginObservingUIApplicationState</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/appWillEnterForeground</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)appWillEnterForeground</Declaration>
			
			
			<Anchor>//api/name/appWillEnterForeground</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/appDidEnterBackground</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)appDidEnterBackground</Declaration>
			
			
			<Anchor>//api/name/appDidEnterBackground</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/shouldPerformAutoLocationUpdate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (BOOL)shouldPerformAutoLocationUpdate</Declaration>
			
			
			<Anchor>//api/name/shouldPerformAutoLocationUpdate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/startReportingLocationWithProvider:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)startReportingLocationWithProvider:(id&lt;UALocationProviderProtocol&gt;)locationProvider</Declaration>
			
			
			<Anchor>//api/name/startReportingLocationWithProvider:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/useDeprecatedMethods</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)useDeprecatedMethods</Declaration>
			
			
			<Anchor>//api/name/useDeprecatedMethods</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/standardLocationDidUpdateToLocation:fromLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)standardLocationDidUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation</Declaration>
			
			
			<Anchor>//api/name/standardLocationDidUpdateToLocation:fromLocation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/significantChangeDidUpdateToLocation:fromLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)significantChangeDidUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation</Declaration>
			
			
			<Anchor>//api/name/significantChangeDidUpdateToLocation:fromLocation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/singleLocationDidUpdateToLocation:fromLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)singleLocationDidUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation</Declaration>
			
			
			<Anchor>//api/name/singleLocationDidUpdateToLocation:fromLocation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/stopSingleLocationWithLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)stopSingleLocationWithLocation:(CLLocation *)location</Declaration>
			
			
			<Anchor>//api/name/stopSingleLocationWithLocation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/stopSingleLocationWithError:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)stopSingleLocationWithError:(NSError *)locationError</Declaration>
			
			
			<Anchor>//api/name/stopSingleLocationWithError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/stopSingleLocation</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)stopSingleLocation</Declaration>
			
			
			<Anchor>//api/name/stopSingleLocation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/locationTimeoutError</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (NSError *)locationTimeoutError</Declaration>
			
			
			<Anchor>//api/name/locationTimeoutError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/shutdownSingleLocationWithTimeoutError</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)shutdownSingleLocationWithTimeoutError</Declaration>
			
			
			<Anchor>//api/name/shutdownSingleLocationWithTimeoutError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UALocationService/sendEventToAnalytics:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)sendEventToAnalytics:(UALocationEvent *)locationEvent</Declaration>
			
			
			<Anchor>//api/name/sendEventToAnalytics:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UALocationService/registerNSUserDefaults</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UALocationService+Internal.h</DeclaredIn>			
			
			<Declaration>+ (void)registerNSUserDefaults</Declaration>
			
			
			<Anchor>//api/name/registerNSUserDefaults</Anchor>
		</Token>
		
	</File>
</Tokens>