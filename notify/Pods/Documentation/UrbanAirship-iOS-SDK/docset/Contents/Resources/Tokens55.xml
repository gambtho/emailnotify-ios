<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/UAInboxMessage.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/UAInboxMessage</TokenIdentifier>
			<Abstract type="html">This class represents a Rich Push Inbox message. It contains all
the available information about a message, including the URLs where
the message can be retrieved.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>
			
			<NodeRef refid="55"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/initWithDict:inbox:</TokenIdentifier>
			<Abstract type="html">Initialize the message.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>- (id)initWithDict:(NSDictionary *)message inbox:(UAInboxMessageList *)inbox</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">A dictionary with keys and values conforming to the
Urban Airship JSON API for retrieving inbox messages.</Abstract>
				</Parameter><Parameter>
					<Name>inbox</Name>
					<Abstract type="html">The inbox containing this message.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A message, populated with data from the message dictionary.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithDict:inbox:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/markAsRead</TokenIdentifier>
			<Abstract type="html">Mark the message as read.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>- (BOOL)markAsRead</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the request was submitted or already complete, otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/markAsRead</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAInboxMessage/performJSDelegate:url:</TokenIdentifier>
			<Abstract type="html">Invokes the UAInbox Javascript delegate from within a message&apos;s UIWebView.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>+ (void)performJSDelegate:(UIWebView *)webView url:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>webView</Name>
					<Abstract type="html">The UIWebView generating the request</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL requested by the webView</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/performJSDelegate:url:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setMessageID:</TokenIdentifier>
			<Abstract type="html">The Urban Airship message ID.
This ID may be used to match an incoming push notification to a specific message.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *messageID</Declaration>
			
			
			<Anchor>//api/name/messageID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/messageID</TokenIdentifier>
			<Abstract type="html">The Urban Airship message ID.
This ID may be used to match an incoming push notification to a specific message.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *messageID</Declaration>
			
			
			<Anchor>//api/name/messageID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setMessageBodyURL:</TokenIdentifier>
			<Abstract type="html">The URL for the message body itself.
This URL may only be accessed with Basic Auth credentials set to the user id and password.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSURL *messageBodyURL</Declaration>
			
			
			<Anchor>//api/name/messageBodyURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/messageBodyURL</TokenIdentifier>
			<Abstract type="html">The URL for the message body itself.
This URL may only be accessed with Basic Auth credentials set to the user id and password.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSURL *messageBodyURL</Declaration>
			
			
			<Anchor>//api/name/messageBodyURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setMessageURL:</TokenIdentifier>
			<Abstract type="html">The URL for the message.
This URL may only be accessed with Basic Auth credentials set to the user id and password.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSURL *messageURL</Declaration>
			
			
			<Anchor>//api/name/messageURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/messageURL</TokenIdentifier>
			<Abstract type="html">The URL for the message.
This URL may only be accessed with Basic Auth credentials set to the user id and password.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSURL *messageURL</Declaration>
			
			
			<Anchor>//api/name/messageURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setContentType:</TokenIdentifier>
			<Abstract type="html">The MIME content type for the message (e.g., text/html)</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *contentType</Declaration>
			
			
			<Anchor>//api/name/contentType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/contentType</TokenIdentifier>
			<Abstract type="html">The MIME content type for the message (e.g., text/html)</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *contentType</Declaration>
			
			
			<Anchor>//api/name/contentType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setUnread:</TokenIdentifier>
			<Abstract type="html">YES if the message is unread, otherwise NO.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (assign) BOOL unread</Declaration>
			
			
			<Anchor>//api/name/unread</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/unread</TokenIdentifier>
			<Abstract type="html">YES if the message is unread, otherwise NO.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (assign) BOOL unread</Declaration>
			
			
			<Anchor>//api/name/unread</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setMessageSent:</TokenIdentifier>
			<Abstract type="html">The date and time the message was sent (UTC)</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSDate *messageSent</Declaration>
			
			
			<Anchor>//api/name/messageSent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/messageSent</TokenIdentifier>
			<Abstract type="html">The date and time the message was sent (UTC)</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSDate *messageSent</Declaration>
			
			
			<Anchor>//api/name/messageSent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setTitle:</TokenIdentifier>
			<Abstract type="html">The message title</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/title</TokenIdentifier>
			<Abstract type="html">The message title</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setExtra:</TokenIdentifier>
			<Abstract type="html">The message&apos;s extra dictionary. This dictionary can be populated
with arbitrary key-value data at the time the message is composed.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSDictionary *extra</Declaration>
			
			
			<Anchor>//api/name/extra</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/extra</TokenIdentifier>
			<Abstract type="html">The message&apos;s extra dictionary. This dictionary can be populated
with arbitrary key-value data at the time the message is composed.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSDictionary *extra</Declaration>
			
			
			<Anchor>//api/name/extra</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAInboxMessage/setInbox:</TokenIdentifier>
			<Abstract type="html">The parent inbox.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (assign) UAInboxMessageList *inbox</Declaration>
			
			
			<Anchor>//api/name/inbox</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAInboxMessage/inbox</TokenIdentifier>
			<Abstract type="html">The parent inbox.</Abstract>
			<DeclaredIn>UAInboxMessage.h</DeclaredIn>			
			
			<Declaration>@property (assign) UAInboxMessageList *inbox</Declaration>
			
			
			<Anchor>//api/name/inbox</Anchor>
		</Token>
		
	</File>
</Tokens>