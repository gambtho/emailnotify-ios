<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/UAPush.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/UAPush</TokenIdentifier>
			<Abstract type="html">This singleton provides an interface to the functionality provided by the Urban Airship client Push API.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>
			
			<NodeRef refid="79"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/useCustomUI:</TokenIdentifier>
			<Abstract type="html">Use a custom UI implementation.
Replaces the default push UI, defined in UAPushUI, with
a custom implementation.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/UAPushUIProtocol</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/UAPushUI</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (void)useCustomUI:(Class)customUIClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>customUIClass</Name>
					<Abstract type="html">An implementation of UAPushUIProtocol</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/useCustomUI:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/openApnsSettings:animated:</TokenIdentifier>
			<Abstract type="html">Open the push settings screen. The default implementation provides settings for toggling push
on and off and managing quiet time.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>+ (void)openApnsSettings:(UIViewController *)viewController animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>viewController</Name>
					<Abstract type="html">The parent view controller.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">YES to animate the display, otherwise NO</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/openApnsSettings:animated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/closeApnsSettingsAnimated:</TokenIdentifier>
			<Abstract type="html">Close the push settings screen.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>+ (void)closeApnsSettingsAnimated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>animated</Name>
					<Abstract type="html">YES to animate the view transition, otherwise NO</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/closeApnsSettingsAnimated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/openTokenSettings:animated:</TokenIdentifier>
			<Abstract type="html">Open the push token demo screen. The default implementation provides a UI for vieweing and
managing device token metadata.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>+ (void)openTokenSettings:(UIViewController *)viewController animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>viewController</Name>
					<Abstract type="html">The parent view controller.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">YES to animate the display, otherwise NO</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/openTokenSettings:animated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/closeTokenSettingsAnimated:</TokenIdentifier>
			<Abstract type="html">Close the push token demo screen.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>+ (void)closeTokenSettingsAnimated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>animated</Name>
					<Abstract type="html">YES to animate the view transition, otherwise NO</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/closeTokenSettingsAnimated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setDelegate:</TokenIdentifier>
			<Abstract type="html">Set a delegate that implements the UAPushNotificationDelegate protocol. If not
set, a default implementation is provided (UAPushNotificationHandler.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;UAPushNotificationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/delegate</TokenIdentifier>
			<Abstract type="html">Set a delegate that implements the UAPushNotificationDelegate protocol. If not
set, a default implementation is provided (UAPushNotificationHandler.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;UAPushNotificationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setNotificationTypes:</TokenIdentifier>
			<Abstract type="html">Notification types this app will request from APNS.</Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) UIRemoteNotificationType notificationTypes</Declaration>
			
			
			<Anchor>//api/name/notificationTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/notificationTypes</TokenIdentifier>
			<Abstract type="html">Notification types this app will request from APNS.</Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) UIRemoteNotificationType notificationTypes</Declaration>
			
			
			<Anchor>//api/name/notificationTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/land</TokenIdentifier>
			<Abstract type="html">Clean up when app is terminated. You should not ordinarily call this method as it is called
during [UAirship land].</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>+ (void)land</Declaration>
			
			
			<Anchor>//api/name/land</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setPushEnabled:</TokenIdentifier>
			<Abstract type="html">Enables/disables push notifications on this device through Urban Airship.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL pushEnabled</Declaration>
			
			
			<Anchor>//api/name/pushEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/pushEnabled</TokenIdentifier>
			<Abstract type="html">Enables/disables push notifications on this device through Urban Airship.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL pushEnabled</Declaration>
			
			
			<Anchor>//api/name/pushEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setDeviceToken:</TokenIdentifier>
			<Abstract type="html">The device token for this device, as a string.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *deviceToken</Declaration>
			
			
			<Anchor>//api/name/deviceToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/deviceToken</TokenIdentifier>
			<Abstract type="html">The device token for this device, as a string.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *deviceToken</Declaration>
			
			
			<Anchor>//api/name/deviceToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/set:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL deviceTokenHasChanged UA_DEPRECATED ( __UA_LIB_1_3_0__ )</Declaration>
			
			
			<Anchor>//api/name/)</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL deviceTokenHasChanged UA_DEPRECATED ( __UA_LIB_1_3_0__ )</Declaration>
			
			
			<Anchor>//api/name/)</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setAutobadgeEnabled:</TokenIdentifier>
			<Abstract type="html">Toggle the Urban Airship auto-badge feature. If enabled, this will update the badge number
stored by UA every time the app is started or foregrounded.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL autobadgeEnabled</Declaration>
			
			
			<Anchor>//api/name/autobadgeEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/autobadgeEnabled</TokenIdentifier>
			<Abstract type="html">Toggle the Urban Airship auto-badge feature. If enabled, this will update the badge number
stored by UA every time the app is started or foregrounded.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL autobadgeEnabled</Declaration>
			
			
			<Anchor>//api/name/autobadgeEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setBadgeNumber:</TokenIdentifier>
			<Abstract type="html">Sets the badge number on the device and on the Urban Airship server.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)setBadgeNumber:(NSInteger)badgeNumber</Declaration>
			<Parameters>
				<Parameter>
					<Name>badgeNumber</Name>
					<Abstract type="html">The new badge number</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBadgeNumber:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/resetBadge</TokenIdentifier>
			<Abstract type="html">Resets the badge to zero (0) on both the device and on Urban Airships servers. This is a
convenience method for setBadgeNumber:0.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)resetBadge</Declaration>
			
			
			<Anchor>//api/name/resetBadge</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/enableAutobadge:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)enableAutobadge:(BOOL)enabled</Declaration>
			
			
			<Anchor>//api/name/enableAutobadge:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setAlias:</TokenIdentifier>
			<Abstract type="html">Alias for this device</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *alias</Declaration>
			
			
			<Anchor>//api/name/alias</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/alias</TokenIdentifier>
			<Abstract type="html">Alias for this device</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *alias</Declaration>
			
			
			<Anchor>//api/name/alias</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setTags:</TokenIdentifier>
			<Abstract type="html">Tags for this device.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSArray *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/tags</TokenIdentifier>
			<Abstract type="html">Tags for this device.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSArray *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setCanEditTagsFromDevice:</TokenIdentifier>
			<Abstract type="html">Allows tag editing from device. Set this to NO to prevent the device from sending any tag
information to the server when using server side tagging. Defaults to YES.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL canEditTagsFromDevice</Declaration>
			
			
			<Anchor>//api/name/canEditTagsFromDevice</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/canEditTagsFromDevice</TokenIdentifier>
			<Abstract type="html">Allows tag editing from device. Set this to NO to prevent the device from sending any tag
information to the server when using server side tagging. Defaults to YES.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL canEditTagsFromDevice</Declaration>
			
			
			<Anchor>//api/name/canEditTagsFromDevice</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/addTagToCurrentDevice:</TokenIdentifier>
			<Abstract type="html">Adds a tag to the list of tags for the device.
To update the server, make all of you changes, then call
[[UAPush shared] updateRegisration] to update the UA server.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)addTagToCurrentDevice:(NSString *)tag</Declaration>
			<Parameters>
				<Parameter>
					<Name>tag</Name>
					<Abstract type="html">Tag to be added</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addTagToCurrentDevice:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/addTagsToCurrentDevice:</TokenIdentifier>
			<Abstract type="html">Adds a group of tags to the current list of device tags. To update the server, make all of your
changes, then call updateRegistration.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)addTagsToCurrentDevice:(NSArray *)tags</Declaration>
			<Parameters>
				<Parameter>
					<Name>tags</Name>
					<Abstract type="html">Array of new tags</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addTagsToCurrentDevice:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/removeTagFromCurrentDevice:</TokenIdentifier>
			<Abstract type="html">Removes a tag from the current tag list. To update the server, make all of you changes, then call
updateRegistration.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)removeTagFromCurrentDevice:(NSString *)tag</Declaration>
			<Parameters>
				<Parameter>
					<Name>tag</Name>
					<Abstract type="html">Tag to be removed</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeTagFromCurrentDevice:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/removeTagsFromCurrentDevice:</TokenIdentifier>
			<Abstract type="html">Removes a group of tags from a device. To update the server, make all of you changes, then call
updateRegisration.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)removeTagsFromCurrentDevice:(NSArray *)tags</Declaration>
			<Parameters>
				<Parameter>
					<Name>tags</Name>
					<Abstract type="html">Array of tags to be removed</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeTagsFromCurrentDevice:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/updateTags:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)updateTags:(NSMutableArray *)values</Declaration>
			
			
			<Anchor>//api/name/updateTags:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/updateAlias:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)updateAlias:(NSString *)value</Declaration>
			
			
			<Anchor>//api/name/updateAlias:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setQuietTime:</TokenIdentifier>
			<Abstract type="html">Quiet time settings for this device.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSDictionary *quietTime</Declaration>
			
			
			<Anchor>//api/name/quietTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/quietTime</TokenIdentifier>
			<Abstract type="html">Quiet time settings for this device.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSDictionary *quietTime</Declaration>
			
			
			<Anchor>//api/name/quietTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setTimeZone:</TokenIdentifier>
			<Abstract type="html">Time Zone for quiet time.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSTimeZone *timeZone</Declaration>
			
			
			<Anchor>//api/name/timeZone</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/timeZone</TokenIdentifier>
			<Abstract type="html">Time Zone for quiet time.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSTimeZone *timeZone</Declaration>
			
			
			<Anchor>//api/name/timeZone</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setQuietTimeEnabled:</TokenIdentifier>
			<Abstract type="html">Enables/Disables quiet time</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL quietTimeEnabled</Declaration>
			
			
			<Anchor>//api/name/quietTimeEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/quietTimeEnabled</TokenIdentifier>
			<Abstract type="html">Enables/Disables quiet time</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL quietTimeEnabled</Declaration>
			
			
			<Anchor>//api/name/quietTimeEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setQuietTimeFrom:to:withTimeZone:</TokenIdentifier>
			<Abstract type="html">Change quiet time for current device token, only take hh:mm into account. Update the server
after making changes to the quiet time with the updateRegistration call.
Batching these calls improves API and client performance.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)setQuietTimeFrom:(NSDate *)from to:(NSDate *)to withTimeZone:(NSTimeZone *)tz</Declaration>
			<Parameters>
				<Parameter>
					<Name>from</Name>
					<Abstract type="html">Date for start of quiet time</Abstract>
				</Parameter><Parameter>
					<Name>to</Name>
					<Abstract type="html">Date for end of quiet time</Abstract>
				</Parameter><Parameter>
					<Name>tz</Name>
					<Abstract type="html">Time zone the dates are in reference to</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setQuietTimeFrom:to:withTimeZone:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/disableQuietTime</TokenIdentifier>
			<Abstract type="html">Disables quiet time settings. This call updates the server with an API call.
This call is deprecated. Set quietTimeEnabled to NO instead;</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)disableQuietTime</Declaration>
			
			
			<Anchor>//api/name/disableQuietTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/tz</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (NSString *)tz</Declaration>
			
			
			<Anchor>//api/name/tz</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setTz:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)setTz:(NSString *)tz</Declaration>
			
			
			<Anchor>//api/name/setTz:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/registerDeviceToken:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)registerDeviceToken:(NSData *)token</Declaration>
			
			
			<Anchor>//api/name/registerDeviceToken:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/registerDeviceTokenWithExtraInfo:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)registerDeviceTokenWithExtraInfo:(NSDictionary *)info</Declaration>
			
			
			<Anchor>//api/name/registerDeviceTokenWithExtraInfo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/registerDeviceToken:withAlias:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)registerDeviceToken:(NSData *)token withAlias:(NSString *)alias</Declaration>
			
			
			<Anchor>//api/name/registerDeviceToken:withAlias:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/registerDeviceToken:withExtraInfo:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)registerDeviceToken:(NSData *)token withExtraInfo:(NSDictionary *)info</Declaration>
			
			
			<Anchor>//api/name/registerDeviceToken:withExtraInfo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/unRegisterDeviceToken</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)unRegisterDeviceToken</Declaration>
			
			
			<Anchor>//api/name/unRegisterDeviceToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/registerForRemoteNotificationTypes:</TokenIdentifier>
			<Abstract type="html">Register the device for remote notifications (see Apple documentation for more
detail).</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types</Declaration>
			<Parameters>
				<Parameter>
					<Name>types</Name>
					<Abstract type="html">Bitmask of notification types</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerForRemoteNotificationTypes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/updateRegistration</TokenIdentifier>
			<Abstract type="html">Registers or updates the current registration with an API call. If push notifications are
not enabled, this unregisters the device token.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)updateRegistration</Declaration>
			
			
			<Anchor>//api/name/updateRegistration</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setRetryOnConnectionError:</TokenIdentifier>
			<Abstract type="html">Automatically retry on errors. If the UA reports an error in the 500 range, or there is a</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL retryOnConnectionError</Declaration>
			
			
			<Anchor>//api/name/retryOnConnectionError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/retryOnConnectionError</TokenIdentifier>
			<Abstract type="html">Automatically retry on errors. If the UA reports an error in the 500 range, or there is a</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL retryOnConnectionError</Declaration>
			
			
			<Anchor>//api/name/retryOnConnectionError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/handleNotification:applicationState:</TokenIdentifier>
			<Abstract type="html">Handle incoming push notifications. This method will record push conversions, parse the notification
and call the appropriate methods on your delegate.</Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>- (void)handleNotification:(NSDictionary *)notification applicationState:(UIApplicationState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>notification</Name>
					<Abstract type="html">The notification payload, as passed to your application delegate.</Abstract>
				</Parameter><Parameter>
					<Name>applicationState</Name>
					<Abstract type="html">The application state at the time the notification was received.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/handleNotification:applicationState:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/pushTypeString:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)pushTypeString:(UIRemoteNotificationType)types</Declaration>
			
			
			<Anchor>//api/name/pushTypeString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setRegistrationQueue:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) dispatch_queue_t registrationQueue</Declaration>
			
			
			<Anchor>//api/name/registrationQueue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/registrationQueue</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) dispatch_queue_t registrationQueue</Declaration>
			
			
			<Anchor>//api/name/registrationQueue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setRegistrationRetryDelay:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) int registrationRetryDelay</Declaration>
			
			
			<Anchor>//api/name/registrationRetryDelay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/registrationRetryDelay</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) int registrationRetryDelay</Declaration>
			
			
			<Anchor>//api/name/registrationRetryDelay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setStandardUserDefaults:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSUserDefaults *standardUserDefaults</Declaration>
			
			
			<Anchor>//api/name/standardUserDefaults</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/standardUserDefaults</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSUserDefaults *standardUserDefaults</Declaration>
			
			
			<Anchor>//api/name/standardUserDefaults</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setDefaultPushHandler:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSObject&lt;UAPushNotificationDelegate&gt; *defaultPushHandler</Declaration>
			
			
			<Anchor>//api/name/defaultPushHandler</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/defaultPushHandler</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSObject&lt;UAPushNotificationDelegate&gt; *defaultPushHandler</Declaration>
			
			
			<Anchor>//api/name/defaultPushHandler</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setDeviceToken:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)setDeviceToken:(NSString *)deviceToken</Declaration>
			
			
			<Anchor>//api/name/setDeviceToken:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setRegistrationPayloadCache:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSDictionary *registrationPayloadCache</Declaration>
			
			
			<Anchor>//api/name/registrationPayloadCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/registrationPayloadCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSDictionary *registrationPayloadCache</Declaration>
			
			
			<Anchor>//api/name/registrationPayloadCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setPushEnabledPayloadCache:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL pushEnabledPayloadCache</Declaration>
			
			
			<Anchor>//api/name/pushEnabledPayloadCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/pushEnabledPayloadCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL pushEnabledPayloadCache</Declaration>
			
			
			<Anchor>//api/name/pushEnabledPayloadCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setIsRegistering:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL isRegistering</Declaration>
			
			
			<Anchor>//api/name/isRegistering</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/isRegistering</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL isRegistering</Declaration>
			
			
			<Anchor>//api/name/isRegistering</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setHasEnteredBackground:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL hasEnteredBackground</Declaration>
			
			
			<Anchor>//api/name/hasEnteredBackground</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/UAPush/hasEnteredBackground</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL hasEnteredBackground</Declaration>
			
			
			<Anchor>//api/name/hasEnteredBackground</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/setQuietTime:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)setQuietTime:(NSMutableDictionary *)quietTime</Declaration>
			
			
			<Anchor>//api/name/setQuietTime:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/defaultTimeZoneForQuietTime</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (NSTimeZone *)defaultTimeZoneForQuietTime</Declaration>
			
			
			<Anchor>//api/name/defaultTimeZoneForQuietTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/parseDeviceToken:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (NSString *)parseDeviceToken:(NSString *)tokenStr</Declaration>
			
			
			<Anchor>//api/name/parseDeviceToken:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/requestToRegisterDeviceTokenWithInfo:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (UA_ASIHTTPRequest *)requestToRegisterDeviceTokenWithInfo:(NSDictionary *)info</Declaration>
			
			
			<Anchor>//api/name/requestToRegisterDeviceTokenWithInfo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/requestToDeleteDeviceToken</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (UA_ASIHTTPRequest *)requestToDeleteDeviceToken</Declaration>
			
			
			<Anchor>//api/name/requestToDeleteDeviceToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/shouldRetryRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (BOOL)shouldRetryRequest:(UA_ASIHTTPRequest *)request</Declaration>
			
			
			<Anchor>//api/name/shouldRetryRequest:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/scheduleRetryForRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)scheduleRetryForRequest:(UA_ASIHTTPRequest *)request</Declaration>
			
			
			<Anchor>//api/name/scheduleRetryForRequest:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/registrationPayload</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (NSMutableDictionary *)registrationPayload</Declaration>
			
			
			<Anchor>//api/name/registrationPayload</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/cacheForRequestUserInfoDictionaryUsing:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (NSMutableDictionary *)cacheForRequestUserInfoDictionaryUsing:(NSDictionary *)info</Declaration>
			
			
			<Anchor>//api/name/cacheForRequestUserInfoDictionaryUsing:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/cacheSuccessfulUserInfo:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)cacheSuccessfulUserInfo:(NSDictionary *)userInfo</Declaration>
			
			
			<Anchor>//api/name/cacheSuccessfulUserInfo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/cacheHasChangedComparedToUserInfo:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (BOOL)cacheHasChangedComparedToUserInfo:(NSDictionary *)userInfo</Declaration>
			
			
			<Anchor>//api/name/cacheHasChangedComparedToUserInfo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/applicationDidBecomeActive</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)applicationDidBecomeActive</Declaration>
			
			
			<Anchor>//api/name/applicationDidBecomeActive</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UAPush/applicationDidEnterBackground</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)applicationDidEnterBackground</Declaration>
			
			
			<Anchor>//api/name/applicationDidEnterBackground</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/UAPush/registerNSUserDefaults</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UAPush+Internal.h</DeclaredIn>			
			
			<Declaration>+ (void)registerNSUserDefaults</Declaration>
			
			
			<Anchor>//api/name/registerNSUserDefaults</Anchor>
		</Token>
		
	</File>
</Tokens>